/*
 * This file is generated by jOOQ.
 */
package jhi.gridscore.server.database.codegen.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import jhi.gridscore.server.database.binding.ConfigBinding;
import jhi.gridscore.server.database.codegen.GridscoreDb;
import jhi.gridscore.server.database.codegen.Indexes;
import jhi.gridscore.server.database.codegen.tables.records.ConfigurationsRecord;
import jhi.gridscore.server.pojo.Configuration;

import org.jooq.Field;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.Internal;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Configurations extends TableImpl<ConfigurationsRecord> {

    private static final long serialVersionUID = -1627359009;

    /**
     * The reference instance of <code>gridscore_db.configurations</code>
     */
    public static final Configurations CONFIGURATIONS = new Configurations();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ConfigurationsRecord> getRecordType() {
        return ConfigurationsRecord.class;
    }

    /**
     * The column <code>gridscore_db.configurations.uuid</code>.
     */
    public final TableField<ConfigurationsRecord, String> UUID = createField("uuid", org.jooq.impl.SQLDataType.VARCHAR(36).nullable(false), this, "");

    /**
     * The column <code>gridscore_db.configurations.configuration</code>.
     */
    public final TableField<ConfigurationsRecord, Configuration> CONFIGURATION = createField("configuration", org.jooq.impl.DefaultDataType.getDefaultDataType("\"gridscore\".\"configurations_configuration\"").nullable(false), this, "", new ConfigBinding());

    /**
     * The column <code>gridscore_db.configurations.created_on</code>.
     */
    public final TableField<ConfigurationsRecord, Timestamp> CREATED_ON = createField("created_on", org.jooq.impl.SQLDataType.TIMESTAMP.defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * Create a <code>gridscore_db.configurations</code> table reference
     */
    public Configurations() {
        this(DSL.name("configurations"), null);
    }

    /**
     * Create an aliased <code>gridscore_db.configurations</code> table reference
     */
    public Configurations(String alias) {
        this(DSL.name(alias), CONFIGURATIONS);
    }

    /**
     * Create an aliased <code>gridscore_db.configurations</code> table reference
     */
    public Configurations(Name alias) {
        this(alias, CONFIGURATIONS);
    }

    private Configurations(Name alias, Table<ConfigurationsRecord> aliased) {
        this(alias, aliased, null);
    }

    private Configurations(Name alias, Table<ConfigurationsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return GridscoreDb.GRIDSCORE_DB;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.CONFIGURATIONS_CONFIGURATION_UUID, Indexes.CONFIGURATIONS_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<ConfigurationsRecord> getPrimaryKey() {
        return Internal.createUniqueKey(jhi.gridscore.server.database.codegen.tables.Configurations.CONFIGURATIONS, "KEY_configurations_PRIMARY", jhi.gridscore.server.database.codegen.tables.Configurations.CONFIGURATIONS.UUID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<ConfigurationsRecord>> getKeys() {
        return Arrays.<UniqueKey<ConfigurationsRecord>>asList(
              Internal.createUniqueKey(jhi.gridscore.server.database.codegen.tables.Configurations.CONFIGURATIONS, "KEY_configurations_PRIMARY", jhi.gridscore.server.database.codegen.tables.Configurations.CONFIGURATIONS.UUID)
            , Internal.createUniqueKey(jhi.gridscore.server.database.codegen.tables.Configurations.CONFIGURATIONS, "KEY_configurations_configuration_uuid", jhi.gridscore.server.database.codegen.tables.Configurations.CONFIGURATIONS.UUID)
        );
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Configurations as(String alias) {
        return new Configurations(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Configurations as(Name alias) {
        return new Configurations(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Configurations rename(String name) {
        return new Configurations(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Configurations rename(Name name) {
        return new Configurations(name, null);
    }
}
